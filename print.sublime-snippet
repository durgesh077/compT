<snippet>
	<content><![CDATA[
template<typename T> void printer(T&con,int end=0,string sp=" ") \
 {if constexpr(is_integral<T>::value){cout<<con<<sp;}else \
 if constexpr(is_pointer<T>::value){fr(i,end){printer(*con,0,sp);con++;} \
 cout<<endl;}else if constexpr(is_same<T,string>::value){cout<<con<<sp;}else \
 if constexpr(is_same <T,pair<int,int>>::value or is_same <T,pair<char,int>>::value) \
 {cout<<"("<<con.f<<","<<con.s<<")"<<sp;}else{for(auto&it:con)printer(it,0,sp); \
 cout<<endl;}}struct PRINT{template<typename T>auto operator<<(T con){printer(con);return *this;} \
 template<typename T>auto operator()(T con,int end=0,string sp=" ") \
 {printer(con,end,sp);return *this;}}print;
]]></content>
	<tabTrigger>PRT</tabTrigger>
	<scope>source.c++</scope>
</snippet>
